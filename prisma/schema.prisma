// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int @id @default(autoincrement()) @map("_id")
  name        String
  password    String?
  avatarUrl   String
  htmlUrl     String
  reposUrl    String
  userName    String @unique
  company     String
  blog        String
  location    String
  hireable    Boolean
  bio         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  repositories Repository[]
  accounts      Account[]
  sessions      Session[]
}

model Repository {
  id                  Int @id @default(autoincrement()) @map("_id")
  name                String
  fullName            String
  htmlUrl             String @unique
  description         String
  repositoryImageUrl  String @default("https://avatars.githubusercontent.com/u/35307862?v=4")
  createdAt           DateTime @default(now())
  updatedAt           DateTime @default(now())
  authorId            Int @map("author_id")
  author              User? @relation(fields: [authorId], references: [id])
}

model Account {
  id                 String  @id @default(cuid())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
